{"ast":null,"code":"var _jsxFileName = \"/workspaces/finance_tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Load accounts from localStorage\n  const [accounts, setAccounts] = useState(() => {\n    try {\n      const savedAccounts = localStorage.getItem('accounts');\n      return savedAccounts ? JSON.parse(savedAccounts) : [{\n        id: 'checking',\n        name: 'Checking Account',\n        balance: 1000,\n        transactions: []\n      }, {\n        id: 'savings',\n        name: 'Savings Account',\n        balance: 5000,\n        transactions: []\n      }];\n    } catch (e) {\n      console.error(\"Error loading from localStorage:\", e);\n      return [{\n        id: 'checking',\n        name: 'Checking Account',\n        balance: 1000,\n        transactions: []\n      }, {\n        id: 'savings',\n        name: 'Savings Account',\n        balance: 5000,\n        transactions: []\n      }];\n    }\n  });\n  const [newAccount, setNewAccount] = useState({\n    name: '',\n    balance: ''\n  });\n  const [transaction, setTransaction] = useState({\n    accountId: accounts.length > 0 ? accounts[0].id : '',\n    type: 'expense',\n    amount: '',\n    description: ''\n  });\n  const [activeTab, setActiveTab] = useState('accounts');\n\n  // Save accounts to localStorage whenever they change\n  useEffect(() => {\n    try {\n      localStorage.setItem('accounts', JSON.stringify(accounts));\n    } catch (e) {\n      console.error(\"Error saving to localStorage:\", e);\n    }\n  }, [accounts]);\n  const resetData = () => {\n    if (window.confirm('Are you sure you want to reset all data?')) {\n      setAccounts([{\n        id: 'checking',\n        name: 'Checking Account',\n        balance: 1000,\n        transactions: []\n      }, {\n        id: 'savings',\n        name: 'Savings Account',\n        balance: 5000,\n        transactions: []\n      }]);\n    }\n  };\n  const handleAddAccount = () => {\n    if (!newAccount.name) return;\n    setAccounts(prev => [...prev, {\n      id: Date.now().toString(),\n      name: newAccount.name,\n      balance: parseFloat(newAccount.balance) || 0,\n      transactions: []\n    }]);\n\n    // Reset form\n    setNewAccount({\n      name: '',\n      balance: ''\n    });\n  };\n  const handleTransactionSubmit = () => {\n    if (!transaction.amount || parseFloat(transaction.amount) <= 0 || !transaction.accountId) {\n      alert(\"Please enter a valid amount and select an account\");\n      return;\n    }\n    const amount = parseFloat(transaction.amount);\n    setAccounts(prevAccounts => prevAccounts.map(account => account.id === transaction.accountId ? {\n      ...account,\n      balance: transaction.type === 'expense' ? account.balance - amount : account.balance + amount,\n      transactions: [...account.transactions, {\n        id: Date.now(),\n        type: transaction.type,\n        amount: amount,\n        description: transaction.description,\n        date: new Date().toISOString()\n      }]\n    } : account));\n\n    // Show confirmation\n    alert(`${transaction.type === 'expense' ? 'Expense' : 'Income'} of $${amount.toFixed(2)} ${transaction.type === 'expense' ? 'from' : 'to'} ${accounts.find(a => a.id === transaction.accountId).name} recorded!`);\n\n    // Reset form\n    setTransaction({\n      accountId: transaction.accountId,\n      type: 'expense',\n      amount: '',\n      description: ''\n    });\n  };\n  const totalBalance = accounts.reduce((sum, account) => sum + account.balance, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Finance Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveTab('transactions'),\n          className: \"add-transaction-btn\",\n          children: \"Quick Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"danger\",\n          onClick: resetData,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), activeTab === 'accounts' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Accounts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"total-balance\",\n        children: [\"Total Balance: $\", totalBalance.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accounts-list\",\n        children: accounts.map(account => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: account.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: account.balance >= 0 ? 'positive' : 'negative',\n              children: [\"$\", account.balance.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"quick-action\",\n              onClick: () => {\n                setTransaction({\n                  ...transaction,\n                  accountId: account.id\n                });\n                setActiveTab('transactions');\n              },\n              children: \"Add Transaction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this)]\n        }, account.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-account\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add New Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Account Name\",\n          value: newAccount.name,\n          onChange: e => setNewAccount({\n            ...newAccount,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Initial Balance\",\n          value: newAccount.balance,\n          onChange: e => setNewAccount({\n            ...newAccount,\n            balance: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddAccount,\n          children: \"Add Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recent-transactions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Recent Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), accounts.flatMap(account => account.transactions.slice(0, 5).map(t => ({\n          ...t,\n          accountName: account.name\n        }))).sort((a, b) => new Date(b.date) - new Date(a.date)).slice(0, 5).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mini-transactions\",\n          children: accounts.flatMap(account => account.transactions.slice(0, 5).map(t => ({\n            ...t,\n            accountName: account.name\n          }))).sort((a, b) => new Date(b.date) - new Date(a.date)).slice(0, 5).map(t => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mini-transaction\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: t.accountName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"transaction-date\",\n                children: new Date(t.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 23\n              }, this), t.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"transaction-desc\",\n                children: t.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: t.type === 'income' ? 'positive' : 'negative',\n              children: [t.type === 'income' ? '+' : '-', \"$\", t.amount.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 21\n            }, this)]\n          }, t.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-transactions\",\n          children: \"No recent transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveTab('transactions'),\n          className: \"secondary-btn\",\n          children: \"Add New Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), activeTab === 'transactions' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card transaction-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quick Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: transaction.accountId,\n            onChange: e => setTransaction({\n              ...transaction,\n              accountId: e.target.value\n            }),\n            className: \"account-select\",\n            children: accounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: account.id,\n              children: [account.name, \" ($\", account.balance.toFixed(2), \")\"]\n            }, account.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Transaction Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"type-toggle\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `toggle-btn ${transaction.type === 'expense' ? 'expense-active' : ''}`,\n              onClick: () => setTransaction({\n                ...transaction,\n                type: 'expense'\n              }),\n              children: \"Expense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `toggle-btn ${transaction.type === 'income' ? 'income-active' : ''}`,\n              onClick: () => setTransaction({\n                ...transaction,\n                type: 'income'\n              }),\n              children: \"Income\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amount-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dollar-sign\",\n              children: \"$\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"0.00\",\n              value: transaction.amount,\n              onChange: e => setTransaction({\n                ...transaction,\n                amount: e.target.value\n              }),\n              className: \"amount-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"What's this for?\",\n            value: transaction.description,\n            onChange: e => setTransaction({\n              ...transaction,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab('accounts'),\n            className: \"secondary-btn\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleTransactionSubmit,\n            className: transaction.type === 'expense' ? 'expense-btn' : 'income-btn',\n            children: [\"Save \", transaction.type === 'expense' ? 'Expense' : 'Income']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"O5TKTxmWT6f+B1PMcShSNZC9MP4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","accounts","setAccounts","savedAccounts","localStorage","getItem","JSON","parse","id","name","balance","transactions","e","console","error","newAccount","setNewAccount","transaction","setTransaction","accountId","length","type","amount","description","activeTab","setActiveTab","setItem","stringify","resetData","window","confirm","handleAddAccount","prev","Date","now","toString","parseFloat","handleTransactionSubmit","alert","prevAccounts","map","account","date","toISOString","toFixed","find","a","totalBalance","reduce","sum","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","value","onChange","target","flatMap","slice","t","accountName","sort","b","toLocaleDateString","_c","$RefreshReg$"],"sources":["/workspaces/finance_tracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './index.css';\n\nfunction App() {\n  // Load accounts from localStorage\n  const [accounts, setAccounts] = useState(() => {\n    try {\n      const savedAccounts = localStorage.getItem('accounts');\n      return savedAccounts \n        ? JSON.parse(savedAccounts) \n        : [\n            { id: 'checking', name: 'Checking Account', balance: 1000, transactions: [] },\n            { id: 'savings', name: 'Savings Account', balance: 5000, transactions: [] }\n          ];\n    } catch (e) {\n      console.error(\"Error loading from localStorage:\", e);\n      return [\n        { id: 'checking', name: 'Checking Account', balance: 1000, transactions: [] },\n        { id: 'savings', name: 'Savings Account', balance: 5000, transactions: [] }\n      ];\n    }\n  });\n  \n  const [newAccount, setNewAccount] = useState({\n    name: '',\n    balance: ''\n  });\n  \n  const [transaction, setTransaction] = useState({\n    accountId: accounts.length > 0 ? accounts[0].id : '',\n    type: 'expense',\n    amount: '',\n    description: ''\n  });\n  \n  const [activeTab, setActiveTab] = useState('accounts');\n  \n  // Save accounts to localStorage whenever they change\n  useEffect(() => {\n    try {\n      localStorage.setItem('accounts', JSON.stringify(accounts));\n    } catch (e) {\n      console.error(\"Error saving to localStorage:\", e);\n    }\n  }, [accounts]);\n  \n  const resetData = () => {\n    if (window.confirm('Are you sure you want to reset all data?')) {\n      setAccounts([\n        { id: 'checking', name: 'Checking Account', balance: 1000, transactions: [] },\n        { id: 'savings', name: 'Savings Account', balance: 5000, transactions: [] }\n      ]);\n    }\n  };\n  \n  const handleAddAccount = () => {\n    if (!newAccount.name) return;\n    \n    setAccounts(prev => [\n      ...prev,\n      {\n        id: Date.now().toString(),\n        name: newAccount.name,\n        balance: parseFloat(newAccount.balance) || 0,\n        transactions: []\n      }\n    ]);\n    \n    // Reset form\n    setNewAccount({ name: '', balance: '' });\n  };\n  \n  const handleTransactionSubmit = () => {\n    if (!transaction.amount || parseFloat(transaction.amount) <= 0 || !transaction.accountId) {\n      alert(\"Please enter a valid amount and select an account\");\n      return;\n    }\n    \n    const amount = parseFloat(transaction.amount);\n    \n    setAccounts(prevAccounts => \n      prevAccounts.map(account => \n        account.id === transaction.accountId\n          ? { \n              ...account, \n              balance: transaction.type === 'expense'\n                ? account.balance - amount\n                : account.balance + amount,\n              transactions: [\n                ...account.transactions,\n                {\n                  id: Date.now(),\n                  type: transaction.type,\n                  amount: amount,\n                  description: transaction.description,\n                  date: new Date().toISOString()\n                }\n              ]\n            }\n          : account\n      )\n    );\n    \n    // Show confirmation\n    alert(`${transaction.type === 'expense' ? 'Expense' : 'Income'} of $${amount.toFixed(2)} ${transaction.type === 'expense' ? 'from' : 'to'} ${accounts.find(a => a.id === transaction.accountId).name} recorded!`);\n    \n    // Reset form\n    setTransaction({\n      accountId: transaction.accountId,\n      type: 'expense',\n      amount: '',\n      description: ''\n    });\n  };\n  \n  const totalBalance = accounts.reduce((sum, account) => sum + account.balance, 0);\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1>Finance Tracker</h1>\n        <div>\n          <button \n            onClick={() => setActiveTab('transactions')} \n            className=\"add-transaction-btn\"\n          >\n            Quick Transaction\n          </button>\n          <button className=\"danger\" onClick={resetData}>Reset</button>\n        </div>\n      </div>\n      \n      {activeTab === 'accounts' && (\n        <div className=\"card\">\n          <h2>Accounts</h2>\n          <p className=\"total-balance\">Total Balance: ${totalBalance.toFixed(2)}</p>\n          \n          <div className=\"accounts-list\">\n            {accounts.map(account => (\n              <div key={account.id} className=\"account-item\">\n                <h3>{account.name}</h3>\n                <div className=\"account-details\">\n                  <p className={account.balance >= 0 ? 'positive' : 'negative'}>\n                    ${account.balance.toFixed(2)}\n                  </p>\n                  <button \n                    className=\"quick-action\"\n                    onClick={() => {\n                      setTransaction({...transaction, accountId: account.id});\n                      setActiveTab('transactions');\n                    }}\n                  >\n                    Add Transaction\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          <div className=\"add-account\">\n            <h3>Add New Account</h3>\n            <input\n              type=\"text\"\n              placeholder=\"Account Name\"\n              value={newAccount.name}\n              onChange={(e) => setNewAccount({...newAccount, name: e.target.value})}\n            />\n            <input\n              type=\"number\"\n              placeholder=\"Initial Balance\"\n              value={newAccount.balance}\n              onChange={(e) => setNewAccount({...newAccount, balance: e.target.value})}\n            />\n            <button onClick={handleAddAccount}>Add Account</button>\n          </div>\n          \n          <div className=\"recent-transactions\">\n            <h3>Recent Transactions</h3>\n            {accounts.flatMap(account => \n              account.transactions.slice(0, 5).map(t => ({\n                ...t,\n                accountName: account.name\n              }))\n            ).sort((a, b) => new Date(b.date) - new Date(a.date)).slice(0, 5).length > 0 ? (\n              <div className=\"mini-transactions\">\n                {accounts.flatMap(account => \n                  account.transactions.slice(0, 5).map(t => ({\n                    ...t,\n                    accountName: account.name\n                  }))\n                )\n                .sort((a, b) => new Date(b.date) - new Date(a.date))\n                .slice(0, 5)\n                .map(t => (\n                  <div key={t.id} className=\"mini-transaction\">\n                    <div>\n                      <span>{t.accountName}</span>\n                      <span className=\"transaction-date\">{new Date(t.date).toLocaleDateString()}</span>\n                      {t.description && <p className=\"transaction-desc\">{t.description}</p>}\n                    </div>\n                    <span className={t.type === 'income' ? 'positive' : 'negative'}>\n                      {t.type === 'income' ? '+' : '-'}${t.amount.toFixed(2)}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p className=\"no-transactions\">No recent transactions</p>\n            )}\n            \n            <button \n              onClick={() => setActiveTab('transactions')}\n              className=\"secondary-btn\"\n            >\n              Add New Transaction\n            </button>\n          </div>\n        </div>\n      )}\n      \n      {activeTab === 'transactions' && (\n        <div className=\"card transaction-card\">\n          <h2>Quick Transaction</h2>\n          \n          <div className=\"transaction-form\">\n            <div className=\"form-group\">\n              <label>Account</label>\n              <select\n                value={transaction.accountId}\n                onChange={(e) => setTransaction({...transaction, accountId: e.target.value})}\n                className=\"account-select\"\n              >\n                {accounts.map(account => (\n                  <option key={account.id} value={account.id}>\n                    {account.name} (${account.balance.toFixed(2)})\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"form-group\">\n              <label>Transaction Type</label>\n              <div className=\"type-toggle\">\n                <button\n                  type=\"button\"\n                  className={`toggle-btn ${transaction.type === 'expense' ? 'expense-active' : ''}`}\n                  onClick={() => setTransaction({...transaction, type: 'expense'})}\n                >\n                  Expense\n                </button>\n                <button\n                  type=\"button\"\n                  className={`toggle-btn ${transaction.type === 'income' ? 'income-active' : ''}`}\n                  onClick={() => setTransaction({...transaction, type: 'income'})}\n                >\n                  Income\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label>Amount</label>\n              <div className=\"amount-input\">\n                <span className=\"dollar-sign\">$</span>\n                <input\n                  type=\"number\"\n                  placeholder=\"0.00\"\n                  value={transaction.amount}\n                  onChange={(e) => setTransaction({...transaction, amount: e.target.value})}\n                  className=\"amount-field\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label>Description (Optional)</label>\n              <input\n                type=\"text\"\n                placeholder=\"What's this for?\"\n                value={transaction.description}\n                onChange={(e) => setTransaction({...transaction, description: e.target.value})}\n              />\n            </div>\n            \n            <div className=\"action-buttons\">\n              <button \n                onClick={() => setActiveTab('accounts')}\n                className=\"secondary-btn\"\n              >\n                Cancel\n              </button>\n              <button \n                onClick={handleTransactionSubmit}\n                className={transaction.type === 'expense' ? 'expense-btn' : 'income-btn'}\n              >\n                Save {transaction.type === 'expense' ? 'Expense' : 'Income'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}