{"ast":null,"code":"var _jsxFileName = \"/workspaces/finance_tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [storageAvailable, setStorageAvailable] = useState(true);\n  useEffect(() => {\n    try {\n      // Test localStorage\n      localStorage.setItem('test', 'test');\n      localStorage.removeItem('test');\n      setStorageAvailable(true);\n    } catch (e) {\n      console.error(\"localStorage not available:\", e);\n      setStorageAvailable(false);\n    }\n  }, []);\n  const [accounts, setAccounts] = useState(() => {\n    try {\n      const savedAccounts = localStorage.getItem('accounts');\n      return savedAccounts ? JSON.parse(savedAccounts) : [{\n        id: 'checking',\n        name: 'Checking Account',\n        balance: 1000,\n        transactions: []\n      }, {\n        id: 'savings',\n        name: 'Savings Account',\n        balance: 5000,\n        transactions: []\n      }];\n    } catch (e) {\n      console.error(\"Error loading from localStorage:\", e);\n      return [{\n        id: 'checking',\n        name: 'Checking Account',\n        balance: 1000,\n        transactions: []\n      }, {\n        id: 'savings',\n        name: 'Savings Account',\n        balance: 5000,\n        transactions: []\n      }];\n    }\n  });\n  const [newAccount, setNewAccount] = useState({\n    name: '',\n    balance: ''\n  });\n\n  // Save accounts to localStorage whenever they change\n  useEffect(() => {\n    try {\n      console.log(\"Saving to localStorage:\", accounts);\n      localStorage.setItem('accounts', JSON.stringify(accounts));\n    } catch (e) {\n      console.error(\"Error saving to localStorage:\", e);\n    }\n  }, [accounts]);\n  const resetData = () => {\n    if (window.confirm('Are you sure you want to reset all data?')) {\n      setAccounts([{\n        id: 'checking',\n        name: 'Checking Account',\n        balance: 1000,\n        transactions: []\n      }, {\n        id: 'savings',\n        name: 'Savings Account',\n        balance: 5000,\n        transactions: []\n      }]);\n    }\n  };\n  const handleAddAccount = () => {\n    if (!newAccount.name) return;\n    setAccounts(prev => [...prev, {\n      id: Date.now().toString(),\n      name: newAccount.name,\n      balance: parseFloat(newAccount.balance) || 0,\n      transactions: []\n    }]);\n\n    // Reset form\n    setNewAccount({\n      name: '',\n      balance: ''\n    });\n  };\n  const totalBalance = accounts.reduce((sum, account) => sum + account.balance, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Finance Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"danger\",\n        onClick: resetData,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), !storageAvailable && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card error-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Warning: Local Storage Not Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your browser doesn't support or has disabled localStorage. Your data will not be saved between sessions.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Accounts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"total-balance\",\n        children: [\"Total Balance: $\", totalBalance.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accounts-list\",\n        children: accounts.map(account => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: account.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: account.balance >= 0 ? 'positive' : 'negative',\n            children: [\"$\", account.balance.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, account.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-account\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add New Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Account Name\",\n          value: newAccount.name,\n          onChange: e => setNewAccount({\n            ...newAccount,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Initial Balance\",\n          value: newAccount.balance,\n          onChange: e => setNewAccount({\n            ...newAccount,\n            balance: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddAccount,\n          children: \"Add Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"M2BsAuTnD36o0+g6IcaA8ka+FiY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","storageAvailable","setStorageAvailable","localStorage","setItem","removeItem","e","console","error","accounts","setAccounts","savedAccounts","getItem","JSON","parse","id","name","balance","transactions","newAccount","setNewAccount","log","stringify","resetData","window","confirm","handleAddAccount","prev","Date","now","toString","parseFloat","totalBalance","reduce","sum","account","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toFixed","map","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/workspaces/finance_tracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './index.css';\n\nfunction App() {\n  const [storageAvailable, setStorageAvailable] = useState(true);\n\n  useEffect(() => {\n    try {\n      // Test localStorage\n      localStorage.setItem('test', 'test');\n      localStorage.removeItem('test');\n      setStorageAvailable(true);\n    } catch (e) {\n      console.error(\"localStorage not available:\", e);\n      setStorageAvailable(false);\n    }\n  }, []);\n\n  const [accounts, setAccounts] = useState(() => {\n    try {\n      const savedAccounts = localStorage.getItem('accounts');\n      return savedAccounts \n        ? JSON.parse(savedAccounts) \n        : [\n            { id: 'checking', name: 'Checking Account', balance: 1000, transactions: [] },\n            { id: 'savings', name: 'Savings Account', balance: 5000, transactions: [] }\n          ];\n    } catch (e) {\n      console.error(\"Error loading from localStorage:\", e);\n      return [\n        { id: 'checking', name: 'Checking Account', balance: 1000, transactions: [] },\n        { id: 'savings', name: 'Savings Account', balance: 5000, transactions: [] }\n      ];\n    }\n  });\n  \n  const [newAccount, setNewAccount] = useState({\n    name: '',\n    balance: ''\n  });\n  \n  // Save accounts to localStorage whenever they change\n  useEffect(() => {\n    try {\n      console.log(\"Saving to localStorage:\", accounts);\n      localStorage.setItem('accounts', JSON.stringify(accounts));\n    } catch (e) {\n      console.error(\"Error saving to localStorage:\", e);\n    }\n  }, [accounts]);\n  \n  const resetData = () => {\n    if (window.confirm('Are you sure you want to reset all data?')) {\n      setAccounts([\n        { id: 'checking', name: 'Checking Account', balance: 1000, transactions: [] },\n        { id: 'savings', name: 'Savings Account', balance: 5000, transactions: [] }\n      ]);\n    }\n  };\n  \n  const handleAddAccount = () => {\n    if (!newAccount.name) return;\n    \n    setAccounts(prev => [\n      ...prev,\n      {\n        id: Date.now().toString(),\n        name: newAccount.name,\n        balance: parseFloat(newAccount.balance) || 0,\n        transactions: []\n      }\n    ]);\n    \n    // Reset form\n    setNewAccount({ name: '', balance: '' });\n  };\n  \n  const totalBalance = accounts.reduce((sum, account) => sum + account.balance, 0);\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1>Finance Tracker</h1>\n        <button className=\"danger\" onClick={resetData}>Reset</button>\n      </div>\n      \n      {!storageAvailable && (\n        <div className=\"card error-card\">\n          <h2>Warning: Local Storage Not Available</h2>\n          <p>Your browser doesn't support or has disabled localStorage. Your data will not be saved between sessions.</p>\n        </div>\n      )}\n      \n      <div className=\"card\">\n        <h2>Accounts</h2>\n        <p className=\"total-balance\">Total Balance: ${totalBalance.toFixed(2)}</p>\n        \n        <div className=\"accounts-list\">\n          {accounts.map(account => (\n            <div key={account.id} className=\"account-item\">\n              <h3>{account.name}</h3>\n              <p className={account.balance >= 0 ? 'positive' : 'negative'}>\n                ${account.balance.toFixed(2)}\n              </p>\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"add-account\">\n          <h3>Add New Account</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Account Name\"\n            value={newAccount.name}\n            onChange={(e) => setNewAccount({...newAccount, name: e.target.value})}\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Initial Balance\"\n            value={newAccount.balance}\n            onChange={(e) => setNewAccount({...newAccount, balance: e.target.value})}\n          />\n          <button onClick={handleAddAccount}>Add Account</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}